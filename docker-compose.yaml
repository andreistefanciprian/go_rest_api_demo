version: '3.3'
services:
  # frontend:
  #   container_name: frontend
  #   image: frontend:latest
  #   build: ./frontend
  #   ports: 
  #     - 8090:5000 
  #   restart: on-failure
  #   # env_file: ./frontend/.vars
  #   depends_on:
  #     my-db:
  #       condition: service_healthy
  #   environment:
  #     - REST_API_HOST=backend
  #     - REST_API_PORT=8080
  #     - JWT_SECRET_KEY=your-256-bit-secret
  #   networks:
  #     - demo

  backend:
    container_name: backend
    image: backend:latest
    build: .
    ports: 
      - 8080:8080
    expose:
      - '8080'
    restart: on-failure
    # env_file:
    #   - .env
    environment:
      - JWT_SECRET_KEY=your-256-bit-secret
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=quickdemo
      - MYSQL_USER=demouser
      - MYSQL_PASSWORD=demopassword
      - MYSQL_HOST=my_db
    depends_on:
      my-db:
        condition: service_healthy
    networks:
      - demo

  my-db:
    container_name: my_db
    image: mysql
    restart: always
    # env_file:
    #   - .env
    environment:
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=quickdemo
      - MYSQL_USER=demouser
      - MYSQL_PASSWORD=demopassword
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_HOST=my_db
    expose:
      - '3306'
    # ports: 
    #   - 3306:3306
    volumes:
      - my-db:/var/lib/mysql
    networks:
      - demo
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
volumes:
  my-db:

networks:
  demo:
    driver: bridge